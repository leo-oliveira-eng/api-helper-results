name: "Release"

on:
  release:
    types:
      - published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

  PROJECT_PATH: "src/Funcfy/Funcfy.csproj"
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}/output

  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_KEY }}

  GITHUB_USER: leo-oliveira-eng
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_FEED: https://nuget.pkg.github.com/leo-oliveira-eng/
  GITHUB_PAT: ${{ secrets.PAT }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup .Net
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: restore
        run: dotnet restore

      - name: build
        run: dotnet build -c Release --no-restore

      - name: Determine package version
        id: version
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let version;
            try {
                version = (await exec('git describe --tags --abbrev=0', {silent: true})).stdout.trim();
            } catch {
                version = 'v0.1.0';
            }
            core.setOutput('version', version);

      - name: Pack
        run: |
            dotnet pack ${{ env.PROJECT_PATH }} \
            --no-restore \
            --no-build \
            -c Release \
            --include-symbols \
            --include-source \
            --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }} \
            /p:PackageVersion=${{ steps.version.outputs.version }}

      - name: Push to GitHub Packages
        run: |
            dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg \
            --source ${{ env.GITHUB_FEED }} \
            --api-key ${{ env.GITHUB_TOKEN }} \
            --skip-duplicate

      - name: Push to NuGet Feed
        run: |
           dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg \
           --source ${{ env.NUGET_FEED }} \
           --api-key ${{ env.NUGET_KEY }} \
           --skip-duplicate
